#
# Moving around:
#
#? Move your focus around
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right
# Or use $mod+[up|down|left|right]
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

#? Move the focused window with the same, but add Shift
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right
# Ditto, with arrow keys
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

#? move windows across outputs
bindsym $mod+o move to output right
bindsym $mod+$shift+o move to output left

#? move floating windows to corners relative to workspace
bindsym $mod+KP_7 exec $swayhelper_rs move_window_to_corner 7
bindsym $mod+KP_8 exec $swayhelper_rs move_window_to_corner 8
bindsym $mod+KP_9 exec $swayhelper_rs move_window_to_corner 9
bindsym $mod+KP_4 exec $swayhelper_rs move_window_to_corner 4
bindsym $mod+KP_5 exec move position center
bindsym $mod+KP_6 exec $swayhelper_rs move_window_to_corner 6
bindsym $mod+KP_1 exec $swayhelper_rs move_window_to_corner 1
bindsym $mod+KP_2 exec $swayhelper_rs move_window_to_corner 2
bindsym $mod+KP_3 exec $swayhelper_rs move_window_to_corner 3

bindsym $mod+KP_Home exec $swayhelper_rs move_window_to_corner 7
bindsym $mod+KP_Up exec $swayhelper_rs move_window_to_corner 8
bindsym $mod+KP_Prior exec $swayhelper_rs move_window_to_corner 9
bindsym $mod+KP_Left exec $swayhelper_rs move_window_to_corner 4
bindsym $mod+KP_Begin move position center
bindsym $mod+KP_Right exec $swayhelper_rs move_window_to_corner 6
bindsym $mod+KP_End exec $swayhelper_rs move_window_to_corner 1
bindsym $mod+KP_Down exec $swayhelper_rs move_window_to_corner 2
bindsym $mod+KP_Next exec $swayhelper_rs move_window_to_corner 3

#? move floating windows to corners relative to output
# assertion for the math: top/bottom may be bars+gaps, left/right is gaps only.
# workspace dimensions do not distinguish gaps from layer-shell induced space
# reduction, that's why this doesn't work without assumptions.
# your mileage may vary.
bindsym $mod+$ctrl+KP_7 exec $swayhelper_rs command move absolute position \(\($gaps_inner + @fo.x@\)\) @fws.y@
bindsym $mod+$ctrl+KP_8 exec $swayhelper_rs command move absolute position \(\(@fo.x@ + @fo.w@ / 2 - @fw.w@ / 2\)\) @fws.y@
bindsym $mod+$ctrl+KP_9 exec $swayhelper_rs command move absolute position \(\(@fo.x@ + @fo.w@ - $gaps_inner - @fw.w@\)\) @fws.y@
bindsym $mod+$ctrl+KP_4 exec $swayhelper_rs command move absolute position \(\($gaps_inner + @fo.x@\)\) \(\(@fws.y@ + @fws.h@ / 2 - @fw.h@ / 2 \)\)
bindsym $mod+$ctrl+KP_5 exec move position center
bindsym $mod+$ctrl+KP_6 exec $swayhelper_rs command move absolute position \(\(@fo.x@ + @fo.w@ - $gaps_inner - @fw.w@\)\) \(\(@fws.y@ + @fws.h@ / 2 - @fw.h@ / 2 \)\)
bindsym $mod+$ctrl+KP_1 exec $swayhelper_rs command move absolute position \(\($gaps_inner + @fo.x@\)\) \(\(@fws.y@ + @fws.h@ - @fw.h@ \)\)
bindsym $mod+$ctrl+KP_2 exec $swayhelper_rs command move absolute position \(\(@fo.x@ + @fo.w@ / 2 - @fw.w@ / 2\)\) \(\(@fws.y@ + @fws.h@ - @fw.h@ \)\)
bindsym $mod+$ctrl+KP_3 exec $swayhelper_rs command move absolute position \(\(@fo.x@ + @fo.w@ - $gaps_inner - @fw.w@\)\) \(\(@fws.y@ + @fws.h@ - @fw.h@ \)\)

bindsym $mod+$ctrl+KP_Home exec $swayhelper_rs command move absolute position \(\($gaps_inner + @fo.x@\)\) @fws.y@
bindsym $mod+$ctrl+KP_Up exec $swayhelper_rs command move absolute position \(\(@fo.x@ + @fo.w@ / 2 - @fw.w@ / 2\)\) @fws.y@
bindsym $mod+$ctrl+KP_Prior exec $swayhelper_rs command move absolute position \(\(@fo.x@ + @fo.w@ - $gaps_inner - @fw.w@\)\) @fws.y@
bindsym $mod+$ctrl+KP_Left exec $swayhelper_rs command move absolute position \(\($gaps_inner + @fo.x@\)\) \(\(@fws.y@ + @fws.h@ / 2 - @fw.h@ / 2 \)\)
bindsym $mod+$ctrl+KP_Begin exec move position center
bindsym $mod+$ctrl+KP_Right exec $swayhelper_rs command move absolute position \(\(@fo.x@ + @fo.w@ - $gaps_inner - @fw.w@\)\) \(\(@fws.y@ + @fws.h@ / 2 - @fw.h@ / 2 \)\)
bindsym $mod+$ctrl+KP_End exec $swayhelper_rs command move absolute position \(\($gaps_inner + @fo.x@\)\) \(\(@fws.y@ + @fws.h@ - @fw.h@ \)\)
bindsym $mod+$ctrl+KP_Down exec $swayhelper_rs command move absolute position \(\(@fo.x@ + @fo.w@ / 2 - @fw.w@ / 2\)\) \(\(@fws.y@ + @fws.h@ - @fw.h@ \)\)
bindsym $mod+$ctrl+KP_Next exec $swayhelper_rs command move absolute position \(\(@fo.x@ + @fo.w@ - $gaps_inner - @fw.w@\)\) \(\(@fws.y@ + @fws.h@ - @fw.h@ \)\)


#? add swap mark
bindsym $mod+$ctrl+s mark --add "_swap2"

#? swap focused container with swap mark
bindsym $mod+$ctrl+$shift+s swap container with mark "_swap2"

#? enter window menu
bindsym $mod+z mode "window menu"

mode "window menu" {
    #@# help-window-menu start
    #? switch focus
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    
    #? show help for window menu
    bindsym Shift+F1 exec $swayhelper_sh sway_help help-window-menu
   
    #? show app specific help 
    bindsym F1 exec $swayhelper_sh get_apphelp

    #? show generic help 
    bindsym $ctrl+F1 exec wayland-helper.sh get_generichelp

    #FIXME include help?
    #FIXME move to sway-helper
    # mode exit is unavoidable, otherwise keys entered here also trigger actions for other hotkeys
    #? run arbitrary swaymsg command
    bindsym c mode default; exec fuzzel --dmenu -p "swaymsg command for focused window"  | xargs swaymsg

    #? enter resize mode
    bindsym r mode "resize"

    #? enter move mode
    bindsym m mode "move"

    #? enter swap move mode
    bindsym Shift+m mode "swap move"

    #? show node properties
    bindsym question exec $swayhelper_sh get_window_properties

    #FIXME if dealing with scratchpad windows for swapping, the marks should be considered
    #? add swap mark
    bindsym s mark --add "_swap2"

    #? swap focused container with swap mark
    bindsym Shift+s swap container with mark "_swap2"
   
    #? exit window menu 
    bindsym Return mode "default"
    bindsym Escape mode "default"
    #@# help-window-menu end
}

mode "swap move" {
    #@# help-swapmove-menu start
    #? focus
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right

    #? show help for window menu
    bindsym Shift+F1 exec $swayhelper_sh sway_help help-swapmove-menu
   
    #? show app specific help 
    bindsym F1 exec $swayhelper_sh get_apphelp

    #? show generic help 
    bindsym $ctrl+F1 exec wayland-helper.sh get_generichelp

    #? swap window to the (left,down,up,right)
    bindsym $left mark --add "_swap", focus left, swap container with mark "_swap", focus left, unmark "_swap"
    bindsym $down mark --add "_swap", focus down, swap container with mark "_swap", focus down, unmark "_swap"
    bindsym $up mark --add "_swap", focus up, swap container with mark "_swap", focus up, unmark "_swap"
    bindsym $right mark --add "_swap", focus right, swap container with mark "_swap", focus right, unmark "_swap"

    bindsym Left mark --add "_swap", focus left, swap container with mark "_swap", focus left, unmark "_swap"
    bindsym Down mark --add "_swap", focus down, swap container with mark "_swap", focus down, unmark "_swap"
    bindsym Up mark --add "_swap", focus up, swap container with mark "_swap", focus up, unmark "_swap"
    bindsym Right mark --add "_swap", focus right, swap container with mark "_swap", focus right, unmark "_swap"

    #? exit swap move mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
    #@# help-swapmove-menu end
}

mode "move" {
    #@# help-move-menu start
    #? focus
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right

    #? show help for window menu
    bindsym Shift+F1 exec $swayhelper_sh sway_help help-move-menu
   
    #? show app specific help 
    bindsym F1 exec $swayhelper_sh get_apphelp

    #? show generic help 
    bindsym $ctrl+F1 exec $swayhelper_sh get_generichelp

    #? move around
    bindsym $left move left
    bindsym $down move down
    bindsym $up move up
    bindsym $right move right

    bindsym Left move left
    bindsym Down move down
    bindsym Up move up
    bindsym Right move right

    #? exit move mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
    #@# help-move-menu end
}
